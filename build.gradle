plugins {
    id 'com.jfrog.bintray' version '1.7.3'
    id 'com.gradle.plugin-publish' version '0.9.7'
    id 'net.researchgate.release' version '2.2.1'
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven'
    id 'jacoco'
}

group 'io.franzbecker'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    jcenter()
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile gradleTestKit()
    testCompile 'com.netflix.nebula:nebula-test:4.4.3'
    testCompile 'org.apache.commons:commons-lang3:3.4'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    configurations = ['archives']
    publish = true
    pkg {
        repo = 'maven'
        name = 'gradle-lombok-plugin'
        licenses = ['Apache-2.0']
        version {
            name = "${project.version}"
        }
    }
}

pluginBundle {
    website = 'https://github.com/franzbecker/gradle-lombok'
    vcsUrl = 'https://github.com/franzbecker/gradle-lombok.git'
    description = 'A gradle plugin that simplifies the usage of the Lombok annotation processor.'
    tags = ['gradle', 'lombok']

    plugins {
        lombokPlugin {
            id = 'io.franzbecker.gradle-lombok'
            displayName = 'Gradle Lombok plugin'
        }
    }

    mavenCoordinates {
        groupId = 'io.franzbecker'
        artifactId = 'gradle-lombok'
    }
}

task updateReadmeVersion {
    doLast {
        def versionPattern = /\d+.\d+(.\d+)?/
        def encoding = 'UTF-8'
        File file = new File("README.md")

        // String replacements - Readme isn't long enough to justify advanced code ;)
        String text = file.getText(encoding)
        text = text.replaceAll("gradle-lombok' version '${versionPattern}'", "gradle-lombok' version '${project.version}'")
        text = text.replaceAll("gradle-lombok/${versionPattern}", "gradle-lombok/${project.version}")

        file.setText(text, encoding)
    }
}
updateReadmeVersion.shouldRunAfter tasks.getByName('confirmReleaseVersion')

/*
 * Configure release plugin.
 * Remove tasks "updateVersion" and "commitNewVersion" as we don't want the new SNAPSHOT
 * version commit on the master branch.
 */
tasks.release.tasks -= ["updateVersion", "commitNewVersion"]
release {
    preTagCommitMessage = '[release] '
    tagCommitMessage = '[release] '
    tagTemplate = 'v${version}'
}
tasks.getByName('preTagCommit').dependsOn updateReadmeVersion